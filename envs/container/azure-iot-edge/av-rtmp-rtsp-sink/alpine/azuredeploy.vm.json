{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 50,
      "metadata": {
        "description": "Service name prefix must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 50 characters in length."
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "customData": {
      "type": "string",
      "metadata": {
        "description": "Custom data toinitialize the virtual machine."
      }
    },    
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D3s_v3",
      "metadata": {
        "description": "Virtual Machine Size: Standard_D3s_v3"
      }
    },
    "rtmpPath": {
      "type": "string",
      "defaultValue": "live/stream",
      "metadata": {
        "description": "RTMP path associated with the live service"
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "rtmpcontainer",
      "metadata": {
        "description": "Container Name where the audio/video chunks are stored"
      }
    },
    "expiryDate": {
      "type": "string",
      "defaultValue": "2030-01-01T00:00:01Z",
      "metadata": {
        "description": "Expiry date of the SAS token"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmName": "[concat(parameters('namePrefix'), 'vm')]",
    "vmDataDiskSize": "512",
    "replicaCount": "1",
    "partitionCount": "1",
    "hostingMode": "default",
    "apiVersion": "2015-06-15",
    "apiStorageVersion": "2019-04-01",
    "storageAccountNamePrefix": "[toLower(substring(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)), 0, 8))]",
    "storageAccountName": "[concat(variables('storageAccountNamePrefix'), uniqueString(concat(resourceGroup().id, variables('storageAccountNamePrefix'))),'sa')]",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "OSDiskName": "osdisksimplevm",
    "dataDisk1VhdName": "[concat(parameters('namePrefix'), 'datadisk')]",
    "networkSecurityGroupName": "[concat(parameters('namePrefix'), 'nsg')]",
    "serviceSasFunctionValues": {
      "signedServices": "b",
      "signedResourceTypes": "sco",
      "signedPermission": "rwdlac",
      "signedStart": "2020-01-01T00:00:01Z",
      "signedExpiry": "2030-01-01T00:00:01Z",
      "signedProtocol": "https",
      "keyToSign": "key1"
    },
    "nicName": "[concat(parameters('namePrefix'), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('namePrefix'), 'subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('namePrefix'), 'ip')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(parameters('namePrefix'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "customDataBase64": "[base64(parameters('customData'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiStorageVersion')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "[variables('apiStorageVersion')]",
          "name": "[concat('default/', parameters('containerName'))]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "SSH port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "rdp",
            "properties": {
              "description": "RDP port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "rtmp",
            "properties": {
              "description": "rtmp port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1935",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "hls",
            "properties": {
              "description": "hls server port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8080",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "http server port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 104,
              "direction": "Inbound"
            }
          },
          {
            "name": "rtsp",
            "properties": {
              "description": "rtsp server port",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "8554",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 105,
              "direction": "Inbound"
            }
          },
          {
            "name": "rtspudp1",
            "properties": {
              "description": "rtsp server udp port",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "8554",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 106,
              "direction": "Inbound"
            }
          },
          {
            "name": "rtspudp2",
            "properties": {
              "description": "rtsp server udp port 2",
              "protocol": "Udp",
              "sourcePortRange": "*",
              "destinationPortRange": "7001",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 107,
              "direction": "Inbound"
            }
          }      
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('vmName')]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]",
          "customData": "[variables('customDataBase64')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18.04-LTS",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "diskSizeGB": "[variables('vmDataDiskSize')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('dataDisk1VhdName'),'.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }    
  ],
  "outputs": {
    "storageAccount": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageAccountUrl": {
      "type": "string",
      "value": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/', parameters('containerName'))]"
    },
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),variables('apiStorageVersion')).keys[0].value]"
    },
    "storageSasToken": {
      "type": "string",
      "value": "[listAccountSas(variables('storageAccountName'), variables('apiStorageVersion'), variables('serviceSasFunctionValues')).accountSasToken]"
    },
    "containerUrl": {
      "type": "string",
      "value": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/', parameters('containerName'),'?', listAccountSas(variables('storageAccountName'), variables('apiStorageVersion'), variables('serviceSasFunctionValues')).accountSasToken, '&comp=list&restype=container')]"
    },
    "httpPlayerCmd": {
      "type": "string",
      "value": "[concat('http://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com/player.html')]"
    },
    "rtmpUrl": {
      "type": "string",
      "value": "[concat('http://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com:1935/live/stream')]"
    },
    "hlsUrl": {
      "type": "string",
      "value": "[concat('http://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com:8080/live/stream.m3u8')]"
    },
    "rtspUrl": {
      "type": "string",
      "value": "[concat('http://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com:8554/rtsp/stream')]"
    },
    "ffmpegCmd": {
      "type": "string",
      "value": "[concat('ffmpeg.exe -v verbose -f dshow -i video=\"Integrated Webcam\":audio=\"Microphone (Realtek(R) Audio)\"  -video_size 1280x720 -strict -2 -c:a aac -b:a 192k -ar 44100 -r 30 -g 60 -keyint_min 60 -b:v 2000000 -c:v libx264 -preset veryfast  -profile main -level 3.0 -pix_fmt yuv420p -bufsize 1800k -maxrate 400k  -f flv rtmp://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com:1935/',  parameters('rtmpPath'))]"
    }
  }
}